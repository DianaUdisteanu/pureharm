#
# Useful rules:
#  ExplicitResultTypes
#  RemoveUnused
#  ExplicitUnit
#  NoAutoTupling
#  NoValInForComprehension
#  ProcedureSyntax
#  LeakingImplicitClassVal
#  NoAutoTupling
#
#  DottyKeywords
#  DottyVarArgPattern
#  DottyVolatileLazyVal
#
#
#
# Alternatively you can run each rule from the sbt console:
# > scalafix ExplicitResultTypes
#
# but I do not know how to set parameters when running rules directly from sbt
#
rules = [
  NoAutoTupling
  LeakingImplicitClassVal
  OrganizeImports
]

# Without this you wind up with fully qualified types __root__.....
# which is really annoying. It's better to fix short types that are wrong (and fewer)
# than to shorten _all_ fully qualified type names.
#
ExplicitResultTypes {
  unsafeShortenNames = true
}

# non standard rule which relies on this:
# https://github.com/liancheng/scalafix-organize-imports
OrganizeImports {
  coalesceToWildcardImportThreshold = 3 # Int.MaxValue
  expandRelative = true
  groupExplicitlyImportedImplicitsSeparately = false
  groupedImports = Merge
  groups = [
    "re:java?\\.",
    "scala.",
    "*"
  ]
  importSelectorsOrder = Ascii
  importsOrder = Ascii
  removeUnused = true
}
